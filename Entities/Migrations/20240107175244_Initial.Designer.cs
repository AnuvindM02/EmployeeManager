// <auto-generated />
using System;
using Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Entities.Migrations
{
    [DbContext(typeof(EmployeesDbContext))]
    [Migration("20240107175244_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Entities.Employee", b =>
                {
                    b.Property<Guid?>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("EmployeeName")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Position")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("EmployeeID");

                    b.ToTable("Employees", (string)null);

                    b.HasData(
                        new
                        {
                            EmployeeID = new Guid("58085ad6-77bf-4e12-a253-f5f7102c3e48"),
                            Email = "vmitskevich0@harvard.edu",
                            EmployeeName = "Virge",
                            Gender = "Male",
                            Position = "Analog Circuit Design manager"
                        },
                        new
                        {
                            EmployeeID = new Guid("c7543bce-6ce3-4c55-af4c-d426a1357b66"),
                            Email = "mdambrogio1@omniture.com",
                            EmployeeName = "Merle",
                            Gender = "Male",
                            Position = "Administrative Officer"
                        },
                        new
                        {
                            EmployeeID = new Guid("152e8639-b070-42d5-af8f-6782494eaa56"),
                            Email = "gcradoc2@drupal.org",
                            EmployeeName = "Giselbert",
                            Gender = "Male",
                            Position = "Teacher"
                        },
                        new
                        {
                            EmployeeID = new Guid("97cfd804-b86c-4b83-9a6b-73ef49aba28e"),
                            Email = "jpfeiffer3@instagram.com",
                            EmployeeName = "Jeremias",
                            Gender = "Male",
                            Position = "Research Associate"
                        },
                        new
                        {
                            EmployeeID = new Guid("e00296ce-e78a-4f39-9695-8f0605106138"),
                            Email = "sstolze4@wp.com",
                            EmployeeName = "Sammy",
                            Gender = "Male",
                            Position = "VP Product Management"
                        },
                        new
                        {
                            EmployeeID = new Guid("735372f6-518d-4128-bfab-38c83160bf96"),
                            Email = "fpalluschek5@amazonaws.com",
                            EmployeeName = "Florrie",
                            Gender = "Female",
                            Position = "Account Coordinator"
                        },
                        new
                        {
                            EmployeeID = new Guid("97952a58-dfe3-43ea-b788-a74d2e5fc2cc"),
                            Email = "ereyne6@wisc.edu",
                            EmployeeName = "Elinor",
                            Gender = "Female",
                            Position = "Account Executive"
                        },
                        new
                        {
                            EmployeeID = new Guid("93f9d8e5-a28e-4f4c-af1e-291c3d2ca3f1"),
                            Email = "pbreache7@miibeian.gov.cn",
                            EmployeeName = "Pete",
                            Gender = "Male",
                            Position = "Software Engineer II"
                        },
                        new
                        {
                            EmployeeID = new Guid("5464431e-30a9-48fa-9cf6-1e176e45d0af"),
                            Email = "sygoe8@ebay.co.uk",
                            EmployeeName = "Sadye",
                            Gender = "Female",
                            Position = "Computer Systems Analyst III"
                        },
                        new
                        {
                            EmployeeID = new Guid("fb604f91-2ba3-48c8-bdf5-d7bd8878c909"),
                            Email = "cgebby9@ask.com",
                            EmployeeName = "Corabel",
                            Gender = "Female",
                            Position = "Analog Circuit Design manager"
                        });
                });

            modelBuilder.Entity("Entities.EmployeeTask", b =>
                {
                    b.Property<Guid?>("TaskID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EmployeeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("TaskDetails")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("TaskID");

                    b.ToTable("EmployeeTasks", (string)null);

                    b.HasData(
                        new
                        {
                            TaskID = new Guid("58f707e7-7199-42bc-96e3-59cf2a4d4e10"),
                            EmployeeID = new Guid("58085ad6-77bf-4e12-a253-f5f7102c3e48"),
                            IsCompleted = true,
                            TaskDetails = "Do something"
                        },
                        new
                        {
                            TaskID = new Guid("d251df32-4452-4b54-b418-03b8eb72b8db"),
                            EmployeeID = new Guid("152e8639-b070-42d5-af8f-6782494eaa56"),
                            IsCompleted = false,
                            TaskDetails = "Do a backflip"
                        },
                        new
                        {
                            TaskID = new Guid("9ae6f45b-2a3a-4f7b-aa74-8cc41b4a5d5b"),
                            EmployeeID = new Guid("fb604f91-2ba3-48c8-bdf5-d7bd8878c909"),
                            IsCompleted = false,
                            TaskDetails = "Make it fast"
                        },
                        new
                        {
                            TaskID = new Guid("720a165c-eed2-4684-aeec-cf326e618945"),
                            EmployeeID = new Guid("e00296ce-e78a-4f39-9695-8f0605106138"),
                            IsCompleted = true,
                            TaskDetails = "Do it before 10 pm"
                        },
                        new
                        {
                            TaskID = new Guid("189e8d61-3552-44bb-a454-47486a85699f"),
                            EmployeeID = new Guid("93f9d8e5-a28e-4f4c-af1e-291c3d2ca3f1"),
                            IsCompleted = false,
                            TaskDetails = "Do the task ASAP"
                        },
                        new
                        {
                            TaskID = new Guid("81bf8eb3-0ce2-4f77-888b-ac59ee9665fe"),
                            EmployeeID = new Guid("fb604f91-2ba3-48c8-bdf5-d7bd8878c909"),
                            IsCompleted = false,
                            TaskDetails = "Run 100 miles"
                        },
                        new
                        {
                            TaskID = new Guid("ef73fcfd-6fc2-4ec0-926e-ccdf4be9226f"),
                            EmployeeID = new Guid("5464431e-30a9-48fa-9cf6-1e176e45d0af"),
                            IsCompleted = false,
                            TaskDetails = "Clean the car"
                        },
                        new
                        {
                            TaskID = new Guid("4090878a-3647-4a91-b67a-2205e917055f"),
                            EmployeeID = new Guid("735372f6-518d-4128-bfab-38c83160bf96"),
                            IsCompleted = false,
                            TaskDetails = "Fix the bugs"
                        },
                        new
                        {
                            TaskID = new Guid("0b625c4c-92e7-489f-86a4-8b0ef537e1e1"),
                            EmployeeID = new Guid("58085ad6-77bf-4e12-a253-f5f7102c3e48"),
                            IsCompleted = false,
                            TaskDetails = "Get something for yourselves"
                        },
                        new
                        {
                            TaskID = new Guid("c42e02d8-4d6f-4c70-99c1-eeeef1e318c5"),
                            EmployeeID = new Guid("735372f6-518d-4128-bfab-38c83160bf96"),
                            IsCompleted = false,
                            TaskDetails = "Wash it"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
